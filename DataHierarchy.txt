RevitCharts : Containers {}
	** Collection of charts (of RevitChart)
	|	+-> Add(key, RevitChart)
	|
	+-> [ListOfCharts   (dictionary<string, RevitChart> )
		|	** collection of charts
		|
		+-> RevitChart : Containers {}
			|	|	** a single chart 
			|	|	** with a collection of cell families
			|	|
			|	+-> Add(key, RevitCellsym)
			|	+-> [updatetype]
			|	+-> RevitChartData  {RevitChartData}
			|		+-> RevitParamList
			|			+> RevitParam{type}
			|	+-> allCellLabels  (Dictionary<key, RevitLabel>)
			|		** master shortcut list to erery cell label
			|
			+-> {ListOfCellSyms}  (dictionary<string, RevitCellsym> )
				|	**  collection of cell families
				|
				+-> RevitCell : Container : ARevitParam {}
					|	** a single cell family
					|	** with a collection of parameters
					|	+-> AnnoSymbol  {revit anno symbol}
					|	+-> DynValue    
					|	+-> ParamDesc
					|	+-> RvtElement  {revit element}
					|	+-> RevitParamList 
					|		+> {ARevitParam{type}[]}
					|	+-> CellLabels  (Dictionary<key, RevitLabel>)
					|		** shortcut list to each label
					|	
					|
					+-> [ListOfLabels]  Dictionary<key, RevitLabel>
						|	** collection of parameters
						|	Key == RevitParamUtil.MakeLabelKey(idx) == 《0x》
						|
						+-> [RevitLabel] : container 
							|	** info for a single label
							|	** paramlist holds the info for a label
							|	+-> Name
							|	+->GetValue() (null)
							|
							+->	[RevitParamList]  ARevitParam[]

family categories  {FamilyCategories} [containers] dictionary<string, families>
	* holds a collection families
		e.g. (annotation, walls)
	+-> families (Families}  [containers]  dictionary<string, family>
		e.g. (generic annotation, curtain walls)
		+-> family  {Family}    [containers] dictionary<string, familyType>
			e.g (spreadsheetchart
			* holds information about a single family
			* holds a collection of family types associated with a family
		+-> family type parameters  [ARevitDesc[]]
		+-> family instance parameters  [ARevitDesc[]]



